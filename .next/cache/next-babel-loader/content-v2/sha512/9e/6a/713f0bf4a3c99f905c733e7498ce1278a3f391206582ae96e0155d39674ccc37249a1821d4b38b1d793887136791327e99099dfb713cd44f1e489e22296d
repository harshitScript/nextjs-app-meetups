{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Harshit\\\\OneDrive\\\\Desktop\\\\NextJsApps\\\\nextjs-meetup-app\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetailPage(props) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    desc: props.meetupData.desc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nexport const getStaticPaths = () => {\n  // We should describe all the possible dynamic segment values here\n  return {\n    fallback: false,\n    paths: [{\n      params: {\n        meetupId: \"m1\"\n      }\n    }, {\n      params: {\n        meetupId: \"m2\"\n      }\n    }]\n  };\n};\nexport const getStaticProps = async context => {\n  // fetch data for a single meetup\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://x_hrsht_x:hrsht-x007@cluster0.yos87.mongodb.net/nextjs-app-meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray(); // As this code only runs on server the output can only be seen in terminal.\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://images.unsplash.com/photo-1552832230-c0197dd311b5?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cm9tZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=60\",\n        id: meetupId,\n        title: \"First Meetup\",\n        address: \"Some street 5 , Some city\",\n        desc: \"This is the First meetup\"\n      }\n    }\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["C:/Users/Harshit/OneDrive/Desktop/NextJsApps/nextjs-meetup-app/pages/[meetupId]/index.js"],"names":["MeetupDetail","useRouter","MongoClient","MeetupDetailPage","props","router","meetupData","image","title","address","desc","getStaticPaths","fallback","paths","params","meetupId","getStaticProps","context","client","connect","db","meetupsCollection","collection","meetups","find","toArray","console","log","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEG,KAAK,CAACE,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEH,KAAK,CAACE,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEJ,KAAK,CAACE,UAAN,CAAiBG,OAH5B;AAIE,IAAA,IAAI,EAAEL,KAAK,CAACE,UAAN,CAAiBI;AAJzB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAE,CACL;AACEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADV,KANK;AAFF,GAAP;AAeD,CAjBM;AAmBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C;AAEA,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AAEA,QAAMG,MAAM,GAAG,MAAMhB,WAAW,CAACiB,OAAZ,CACnB,8GADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,GAAyBC,OAAzB,EAAtB,CAZ+C,CAc/C;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,mKAFQ;AAGVqB,QAAAA,EAAE,EAAEb,QAHM;AAIVP,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,2BALC;AAMVC,QAAAA,IAAI,EAAE;AANI;AADP;AADF,GAAP;AAYD,CA5BM;AA8BP,eAAeP,gBAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { useRouter } from \"next/router\";\r\nimport { MongoClient } from \"mongodb\";\r\nfunction MeetupDetailPage(props) {\r\n  const router = useRouter();\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      desc={props.meetupData.desc}\r\n    />\r\n  );\r\n}\r\n\r\nexport const getStaticPaths = () => {\r\n  // We should describe all the possible dynamic segment values here\r\n  return {\r\n    fallback: false,\r\n    paths: [\r\n      {\r\n        params: {\r\n          meetupId: \"m1\",\r\n        },\r\n      },\r\n      {\r\n        params: {\r\n          meetupId: \"m2\",\r\n        },\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  // fetch data for a single meetup\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://x_hrsht_x:hrsht-x007@cluster0.yos87.mongodb.net/nextjs-app-meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  // As this code only runs on server the output can only be seen in terminal.\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        image:\r\n          \"https://images.unsplash.com/photo-1552832230-c0197dd311b5?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8cm9tZXxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=60\",\r\n        id: meetupId,\r\n        title: \"First Meetup\",\r\n        address: \"Some street 5 , Some city\",\r\n        desc: \"This is the First meetup\",\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}