{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Harshit\\\\OneDrive\\\\Desktop\\\\NextJsApps\\\\nextjs-meetup-app\\\\pages\\\\index.js\",\n    _this = this;\n\n// our-domain.com/\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"https://static.thenounproject.com/png/2059526-200.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n}; // ONLY PRE-RENDERES DURING BUILD(NOTHING TO DO WITH REQUESTS)\n\n\n_c = HomePage;\n\n/*\r\n// EXECUTES EVERY TIME THE REQUEST HITS THE SERVER.\r\nexport const getServerSideProps = (context) => {\r\n  // ANY CODE THAT WILL EXECUTE ON THE SERVER(NEVER EXECUTE ON THE CLIENT SIDE)\r\n\r\n  const req = context.req;\r\n  const res = context.res;\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Harshit/OneDrive/Desktop/NextJsApps/nextjs-meetup-app/pages/index.js"],"names":["Head","MeetupList","HomePage","props","meetups"],"mappings":";;;;;;AAAA;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,QAAA,GAAG,EAAC,MADN;AAEE,QAAA,IAAI,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAQE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aARF;AAAA,kBADF;AAYD,CAbD,C,CAeA;;;KAfMF,Q;;AA+CN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAeA,QAAf","sourcesContent":["// our-domain.com/\r\nimport { MongoClient } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>React Meetups</title>\r\n        <link\r\n          rel=\"icon\"\r\n          href=\"https://static.thenounproject.com/png/2059526-200.png\"\r\n        />\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </>\r\n  );\r\n};\r\n\r\n// ONLY PRE-RENDERES DURING BUILD(NOTHING TO DO WITH REQUESTS)\r\nexport const getStaticProps = async () => {\r\n  // ANY CODE THAT WILL EXECUTE ON THE SERVER(NEVER EXECUTE ON THE CLIENT SIDE)\r\n  // fetch data from some API\r\n  // Read/write files\r\n  // Any code related to server.\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://x_hrsht_x:hrsht-x007@cluster0.yos87.mongodb.net/nextjs-app-meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\n/*\r\n// EXECUTES EVERY TIME THE REQUEST HITS THE SERVER.\r\nexport const getServerSideProps = (context) => {\r\n  // ANY CODE THAT WILL EXECUTE ON THE SERVER(NEVER EXECUTE ON THE CLIENT SIDE)\r\n\r\n  const req = context.req;\r\n  const res = context.res;\r\n  return {\r\n    props: {\r\n      meetups: DUMMY_MEETUPS,\r\n    },\r\n  };\r\n};\r\n*/\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}